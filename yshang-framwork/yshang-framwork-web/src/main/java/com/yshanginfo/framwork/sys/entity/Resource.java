package com.yshanginfo.framwork.sys.entity;

// Generated 2014-6-19 17:10:12 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.yshanginfo.framwork.core.entity.IdEntity;

/**
 * Resource generated by hbm2java
 */
@Entity
@Table(name = "sys_resource")
public class Resource extends IdEntity {

	private Resource parent;
	private String name;
	private String code;
	private String url;
	private String ico;
	private Integer isRoot;
	private Integer isShow;
	private Integer orderId;
	private Integer level;
	private String parentIds;
	private String permissionIds;
	private String memo;
	@JsonIgnore
	private List<Resource> resources = new ArrayList<Resource>(0);
	@JsonIgnore
	private List<RoleAuth> roleAuths = new ArrayList<RoleAuth>(0);

	public Resource() {
	}

	public Resource(String id) {
		this.id = id;
	}

	public Resource(String id, Resource parent, String name, String code, String url, String ico, Integer isRoot,
			Integer isShow, Integer orderId, String parentIds, String permissionIds, String memo,
			List<Resource> resources, List<RoleAuth> roleAuths) {
		this.id = id;
		this.parent = parent;
		this.name = name;
		this.code = code;
		this.url = url;
		this.ico = ico;
		this.isRoot = isRoot;
		this.isShow = isShow;
		this.orderId = orderId;
		this.parentIds = parentIds;
		this.permissionIds = permissionIds;
		this.memo = memo;
		this.resources = resources;
		this.roleAuths = roleAuths;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id")
	public Resource getParent() {
		return this.parent;
	}

	public void setParent(Resource parent) {
		this.parent = parent;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "code", length = 100)
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "url", length = 200)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "ico", length = 100)
	public String getIco() {
		return this.ico;
	}

	public void setIco(String ico) {
		this.ico = ico;
	}

	@Column(name = "is_root")
	public Integer getIsRoot() {
		return this.isRoot;
	}

	public void setIsRoot(Integer isRoot) {
		this.isRoot = isRoot;
	}

	@Column(name = "is_show")
	public Integer getIsShow() {
		return this.isShow;
	}

	public void setIsShow(Integer isShow) {
		this.isShow = isShow;
	}

	@Column(name = "order_id")
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}
	
	@Column(name = "level")
	public Integer getLevel() {
		return level;
	}

	public void setLevel(Integer level) {
		this.level = level;
	}

	@Column(name = "parent_ids", length = 200)
	public String getParentIds() {
		return this.parentIds;
	}

	public void setParentIds(String parentIds) {
		this.parentIds = parentIds;
	}

	@Column(name = "permission_ids", length = 200)
	public String getPermissionIds() {
		return this.permissionIds;
	}

	public void setPermissionIds(String permissionIds) {
		this.permissionIds = permissionIds;
	}

	@Column(name = "memo", length = 200)
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parent")
	@OrderBy("order_id ASC")
	public List<Resource> getResources() {
		return this.resources;
	}

	public void setResources(List<Resource> resources) {
		this.resources = resources;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "resource")
	public List<RoleAuth> getRoleAuths() {
		return this.roleAuths;
	}

	public void setRoleAuths(List<RoleAuth> roleAuths) {
		this.roleAuths = roleAuths;
	}
	

}
