<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd"
  default-lazy-init="true">

  <description>Shiro安全配置</description>

  <!-- 会话Cookie模板 -->
  <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
    <constructor-arg value="sid" />
    <property name="httpOnly" value="true" />
    <property name="maxAge" value="-1" />
  </bean>
  <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
    <constructor-arg value="rememberMe" />
    <property name="httpOnly" value="true" />
    <property name="maxAge" value="604800" /><!-- 7天 -->
  </bean>

  <!-- rememberMe管理器 -->
  <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
  <!-- cookie加密的key，建议每个项目不一样，可以稍微改动里面的部分数字和字母 -->
    <property name="cipherKey" 
    value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhKaLUs0KTA3Kprsdag==')}" />
    <property name="cookie" ref="rememberMeCookie" />
  </bean>

  <!-- 单realm配置 -->
  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <property name="realm" ref="adminRealm" />
    <property name="cacheManager" ref="shiroEhcacheManager" />
    <property name="rememberMeManager" ref="rememberMeManager" />
  </bean>

  <bean id="adminRealm" class="com.yshanginfo.framwork.sys.service.ShiroDbRealm" depends-on="userRepository,roleRepository">
    <property name="userService" ref="userService" />
  </bean>
  <!-- 多realm配置 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"> <property name="authenticator" 
    ref="modelAuthricator" /> <property name="cacheManager" ref="shiroEhcacheManager" /> <property name="realms"> <list> <ref bean="adminRealm" 
    /> <ref bean="frontRealm" /> </list> </property> </bean> <bean id="modelAuthricator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator"> 
    <property name="authenticationStrategy" ref="successfulStrategy" /> </bean> -->
  <!-- FirstSuccessfulStrategy：只要有一个Realm验证成功即可，只返回第一个Realm身份验证成功的认证信息，其他的忽略； AtLeastOneSuccessfulStrategy：只要有一个Realm验证成功即可，和FirstSuccessfulStrategy不同，返回所有Realm身份验证成功的认证信息； 
    AllSuccessfulStrategy：所有Realm验证成功才算成功，且返回所有Realm身份验证成功的认证信息，如果有一个失败就失败了。 <bean id="successfulStrategy" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy" 
    /> -->
  <!-- 項目自定义的Realm <bean id="adminRealm" class="com.yshanginfo.framwork.sys.service.ShiroDbRealm" depends-on="userRepository,roleRepository"> 
    <property name="userService" ref="userService" /> </bean> <bean id="frontRealm" class="com.yshanginfo.framwork.front.servce.FrontShiroRealm"> 
    </bean> -->
  <!-- Shiro Filter -->

  <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
    <property name="redirectUrl" value="/admin/login" />
  </bean>

  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="filters">
      <util:map>
        <entry key="logout" value-ref="logoutFilter" />
      </util:map>
    </property>
    <property name="securityManager" ref="securityManager" />
    <property name="loginUrl" value="/admin/login" />
    <property name="successUrl" value="/admin/login/success" />
    <property name="unauthorizedUrl" value="/admin/login/unlogin" />
    <property name="filterChainDefinitions">
      <value>
        /admin/login = authc
        /admin/logout = logout
        /admin/monitor/druid/** = authc,perms["/admin/monitor/druid:list"]
      </value>
    </property>
  </bean>

  <!-- 用户授权信息Cache, 采用EhCache -->
  <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    <property name="cacheManagerConfigFile" value="classpath:security/ehcache-shiro.xml" />
  </bean>

  <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
  <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

  <!-- AOP式方法级权限检查 -->
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
    <property name="proxyTargetClass" value="true" />
  </bean>
  <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    <property name="securityManager" ref="securityManager" />
  </bean>
</beans>